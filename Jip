<template>
  <div id="app" class="container-fluid">
    <div class="row">
      <div class="col-12 d-flex justify-content-end align-items-center my-2">
        <button @click="saveChanges" class="btn btn-primary">Save Changes</button>
      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <div id="tree-container"></div>
      </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="nodeModal" tabindex="-1" role="dialog" aria-labelledby="nodeModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="nodeModalLabel">Node Label</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <input type="text" class="form-control" v-model="modalLabel" @keypress.enter="saveLabel">
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" @click="saveLabel">Save</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import anychart from 'anychart';

export default {
  data() {
    return {
      tree: null,
      treeData: null,
      modalLabel: "",
      currentNodeData: null,
    };
  },
  methods: {
    async loadTreeData() {
      try {
        const response = await fetch("/tree.json");
        if (!response.ok) {
          throw new Error("Network response was not ok " + response.statusText);
        }
        return await response.json();
      } catch (error) {
        console.error("Error loading tree data:", error);
      }
    },
    drawTree(treeData) {
      this.tree = anychart.tree(treeData);
      this.tree.container("tree-container");
      this.tree.draw();

      this.tree.listen('treeItemButtonClick', (e) => {
        this.currentNodeData = e.item;
        this.modalLabel = e.item.get("name");
        $('#nodeModal').modal('show');
      });
    },
    saveLabel() {
      if (this.modalLabel.trim() && this.currentNodeData) {
        this.currentNodeData.set("name", this.modalLabel.trim());
        $('#nodeModal').modal('hide');
      } else {
        alert("Please enter a valid label.");
      }
    },
    async saveChanges() {
      try {
        const response = await fetch("/save", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(this.treeData),
        });
        if (response.ok) {
          alert("Changes saved successfully!");
        } else {
          alert("Failed to save changes.");
        }
      } catch (error) {
        console.error("Error:", error);
      }
    },
  },
  async mounted() {
    this.treeData = await this.loadTreeData();
    this.drawTree(this.treeData);
  },
};
</script>

<style scoped>
#tree-container {
  border: 1px solid lightgray;
  height: 500px;
}
</style>
